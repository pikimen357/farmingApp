# Generated by Django 5.0.2 on 2025-05-03 04:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PestisidaPupuk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('jenis', models.TextField(choices=[('PESTISIDA', 'Pestisida'), ('PUPUK', 'Pupuk')], max_length=10)),
                ('nama_obat', models.CharField(db_index=True, max_length=100, unique=True)),
                ('produsen', models.CharField(max_length=100)),
                ('warna', models.TextField(choices=[('HITAM', 'Hitam'), ('PUTIH', 'Putih'), ('MERAH', 'Merah'), ('KUNING', 'Kuning')], max_length=10)),
                ('deskripsi', models.TextField(default='Deskripsi Obat')),
            ],
            options={
                'db_table': 'pestisida_pupuk',
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telepon', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('luas_tanah_ha', models.BigIntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Hama',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('nama_hama', models.CharField(db_index=True, max_length=100, unique=True)),
                ('rate_bahaya', models.IntegerField(choices=[(1, 'Low'), (2, 'Moderate'), (3, 'Considerable'), (4, 'Dangerous'), (5, 'Extreme')], default=1)),
                ('makhluk', models.CharField(choices=[('TUMBUHAN', 'Tumbuhan'), ('HEWAN', 'Hewan')], max_length=20)),
                ('deskripsi', models.TextField(default='Deskripsi Hama')),
                ('obat', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='farming_v3.pestisidapupuk')),
            ],
            options={
                'db_table': 'hama',
                'ordering': ['-rate_bahaya'],
            },
        ),
        migrations.CreateModel(
            name='Tanaman',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('nama_tanaman', models.CharField(db_index=True, max_length=100, unique=True)),
                ('jenis', models.CharField(max_length=100)),
                ('waktu_tanam_hari', models.IntegerField(default=0)),
                ('harga_per_ton', models.BigIntegerField(default=0)),
                ('deskripsi', models.TextField(default='deskripsi tanaman')),
                ('gambar', models.ImageField(blank=True, null=True, upload_to='tanaman/')),
                ('public', models.BooleanField(default=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tanaman', to=settings.AUTH_USER_MODEL)),
                ('peluang_hama', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farming_v3.hama')),
            ],
            options={
                'db_table': 'tanaman',
                'ordering': ['-harga_per_ton'],
            },
        ),
        migrations.CreateModel(
            name='Panenan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('berat_ton', models.BigIntegerField(default=0)),
                ('deskripsi', models.TextField()),
                ('owner', models.ForeignKey(default=1, on_delete=django.db.models.deletion.RESTRICT, related_name='panenan', to=settings.AUTH_USER_MODEL)),
                ('hasil_panen', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='farming_v3.tanaman')),
            ],
            options={
                'db_table': 'panenan',
                'ordering': ['created'],
            },
        ),
    ]
